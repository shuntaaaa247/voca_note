// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator zod { //zod-prisma-typesによる型生成の設定
  provider = "zod-prisma-types"
  output = "../generated/zod"
  createInputTypes = false
}
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"] //エラー回避のために必要
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id String @id @default(uuid())
  /// @zod.string.email().max(255, { message: "Must be 255 or fewer characters long" })
  email String @unique
  /// @zod.string.min(8, { message: "Must be 8 or more characters long" })
  password String
  /// @zod.string.max(50, {message: "Must be 50 or fewer characters long" })
  username String
  categories Category[]
}

model Category {
  id String @id @default(uuid())
  /// @zod.string.max(200, { message: "Must be 100 or fewer characters long" })
  categoryName String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  items Item[]

  @@unique(fields: [categoryName, userId])
}

model Item {
  id String @id @default(uuid())
  /// @zod.string.max(300, { message: "Must be 300 or fewer characters long" })
  word String
  /// @zod.string.max(300, { message: "Must be 300 or fewer characters long" })
  meaning String
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
}